{"version":3,"file":"static/js/865.9674df41.chunk.js","mappings":"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","sources":["components/ui/button/Button.jsx","components/ui/card/Card.jsx","pages/MyFlashcard.jsx","redux/actions/actions.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ text, btnclass, fn, type, disabled, title, ref }) => {\r\n  return (\r\n    <button\r\n      onClick={fn}\r\n      type={type}\r\n      title={title}\r\n      ref={ref}\r\n      disabled={disabled}\r\n      className={btnclass}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { TbTrashX } from \"react-icons/tb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dummyImage from \"../../../assets/dummy_image.jpg\";\r\nimport Button from \"../button/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteFlashcard } from \"../../../redux/actions/actions\";\r\n\r\nconst Card = ({ group, groupDesc, terms, image, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div\r\n      className=\"sm:w-72 w-full md:w-80 lg:w-80 mx-auto sm:mx-0 bg-white border border-gray-300 shadow-sm rounded-md p-5 pt-8 relative flex flex-col justify-between\"\r\n      id={id}\r\n    >\r\n      <div className=\"absolute top-1 right-1\">\r\n        <Button\r\n          type={\"button\"}\r\n          text={<TbTrashX />}\r\n          fn={() => dispatch(deleteFlashcard(id))}\r\n          btnclass={\r\n            \"p-1 rounded-md text-red-500 text-xl hover:bg-gray-100 transition-all active:bg-red-200\"\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex items-center gap-5\">\r\n        <div className=\"w-14 h-14\">\r\n          <img\r\n            className=\"w-14 h-14 min-w-max object-cover aspect-square rounded-full\"\r\n            src={!image ? dummyImage : image}\r\n            alt=\"flashcard-profile\"\r\n            title=\"flashcard-profile\"\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n        <div className=\"break-words line-clamp-1\">\r\n          <h2 className=\"font-bold text-lg break-words line-clamp-1\">\r\n            {group}\r\n          </h2>\r\n          <span className=\"text-gray-500 font-semibold\">\r\n            {terms.length} {terms.length <= 1 ? \"Term\" : \"Terms\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"my-4\">\r\n        <p className=\"text-gray-600 line-clamp-2\">{groupDesc}</p>\r\n        <Link\r\n          to={`/dashboard/${id}`}\r\n          className=\"flex items-center gap-5 mt-5 text-red-600 font-semibold\"\r\n          title=\"view card details\"\r\n        >\r\n          View Card\r\n          <i>\r\n            <BsArrowRight />\r\n          </i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","// myflashcard page that shows all flashcards\r\n\r\nimport React from \"react\";\r\nimport Card from \"../components/ui/card/Card\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MyFlashcard = () => {\r\n  const { flashcards } = useSelector((state) => state.flashCardData);\r\n\r\n  return (\r\n    <div\r\n      className=\"flex gap-3 flex-wrap mx-auto \"\r\n      data-testid=\"container\"\r\n      role=\"main\"\r\n    >\r\n      {/* if flashcard state data is not empty then shows cards else shows an message */}\r\n\r\n      {flashcards.length === 0 ? (\r\n        <div className=\"flex flex-col items-center justify-center gap-4 text-center mx-auto\">\r\n          <p className=\"text-black text-2xl\">You don't have any flashcards</p>\r\n          <NavLink\r\n            role=\"link\"\r\n            to={\"/\"}\r\n            data-testid=\"navigation\"\r\n            name=\"Create Flashcard\"\r\n            // role=\"navigation\"\r\n            className={\r\n              \"px-6 py-2 bg-red-500 rounded-md text-xl font-semibold text-white hover:bg-red-700 transition-all\"\r\n            }\r\n          >\r\n            Create Flashcard\r\n          </NavLink>\r\n        </div>\r\n      ) : (\r\n        flashcards.map(({ id, groups, terms }) => (\r\n          <Card\r\n            dataTestid=\"flashcard\"\r\n            key={id}\r\n            id={id}\r\n            group={groups.group}\r\n            groupDesc={groups.groupDesc}\r\n            terms={terms}\r\n            image={groups.Profile}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyFlashcard;\r\n","// This function creates an action that creates a flashcard.\r\nexport const createFlashcard = (formData) => {\r\n  // The `type` property of the action is set to `CREATE_FLASHCARD`.\r\n  // This indicates that the action is for creating a flashcard.\r\n  // The `payload` property of the action is set to the `formData` object.\r\n  // This object contains the data that is used to create the flashcard.\r\n  return {\r\n    type: \"CREATE_FLASHCARD\",\r\n    payload: formData,\r\n  };\r\n};\r\n\r\n// This function creates an action that deletes a flashcard.\r\nexport const deleteFlashcard = (id) => {\r\n  // The `type` property of the action is set to `DELETE_FLASHCARD`.\r\n  // This indicates that the action is for deleting a flashcard.\r\n  // The `payload` property of the action is set to the `id` of the flashcard that is to be deleted.\r\n  return {\r\n    type: \"DELETE_FLASHCARD\",\r\n    payload: id,\r\n  };\r\n};\r\n"],"names":["_ref","text","btnclass","fn","type","disabled","title","ref","_jsx","onClick","className","children","group","groupDesc","terms","image","id","dispatch","useDispatch","_jsxs","Button","TbTrashX","deleteFlashcard","src","dummyImage","alt","loading","length","Link","to","concat","BsArrowRight","flashcards","useSelector","state","flashCardData","role","NavLink","name","map","groups","Card","dataTestid","Profile","createFlashcard","formData","payload"],"sourceRoot":""}