{"version":3,"file":"static/js/448.f6d0e89c.chunk.js","mappings":"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","sources":["components/ui/button/Button.jsx","components/ui/modal/ShareModal.jsx","components/ui/slider/Slider.jsx","components/template/PrintTemplate.jsx","pages/FlashcardDetails.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({ text, btnclass, fn, type, disabled, title, ref }) => {\r\n  return (\r\n    <button\r\n      onClick={fn}\r\n      type={type}\r\n      title={title}\r\n      ref={ref}\r\n      disabled={disabled}\r\n      className={btnclass}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n  EmailShareButton,\r\n  EmailIcon,\r\n  WhatsappShareButton,\r\n  WhatsappIcon,\r\n  LinkedinShareButton,\r\n  LinkedinIcon,\r\n} from \"react-share\";\r\n\r\nimport { VscCopy, VscClose } from \"react-icons/vsc\";\r\nimport { BiShareAlt } from \"react-icons/bi\";\r\nimport { MdDone } from \"react-icons/md\";\r\nimport Button from \"../button/Button\";\r\nimport ShareOnSocial from \"react-share-on-social\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ShareModal = ({ show, hide }) => {\r\n  const { flashcards } = useSelector((state) => state.flashCardData);\r\n\r\n  const { id } = useParams();\r\n  const socialShare = [\r\n    {\r\n      id: 1,\r\n      btn: (\r\n        <FacebookShareButton\r\n          url={\"https://www.example.com\"}\r\n          quote={\"Dummy text!\"}\r\n          hashtag=\"#muo\"\r\n          title=\"share on facebook\"\r\n        >\r\n          <FacebookIcon size={32} round />\r\n        </FacebookShareButton>\r\n      ),\r\n    },\r\n    {\r\n      id: 2,\r\n      btn: (\r\n        <LinkedinShareButton\r\n          url={\"https://www.example.com\"}\r\n          quote={\"Dummy text!\"}\r\n          hashtag=\"#muo\"\r\n          title=\"share on linkedin\"\r\n        >\r\n          <LinkedinIcon size={32} round />\r\n        </LinkedinShareButton>\r\n      ),\r\n    },\r\n    {\r\n      id: 3,\r\n      btn: (\r\n        <WhatsappShareButton\r\n          url={\"https://www.example.com\"}\r\n          quote={\"Dummy text!\"}\r\n          hashtag=\"#muo\"\r\n          title=\"share on whatsapp\"\r\n        >\r\n          <WhatsappIcon size={32} round />\r\n        </WhatsappShareButton>\r\n      ),\r\n    },\r\n    {\r\n      id: 4,\r\n      btn: (\r\n        <TwitterShareButton\r\n          url={\"https://www.example.com\"}\r\n          quote={\"Dummy text!\"}\r\n          hashtag=\"#muo\"\r\n          title=\"share on twitter\"\r\n        >\r\n          <TwitterIcon size={32} round />\r\n        </TwitterShareButton>\r\n      ),\r\n    },\r\n    {\r\n      id: 5,\r\n      btn: (\r\n        <EmailShareButton\r\n          url={\"https://www.example.com\"}\r\n          quote={\"Dummy text!\"}\r\n          hashtag=\"#muo\"\r\n          title=\"share on email\"\r\n        >\r\n          <EmailIcon size={32} round />\r\n        </EmailShareButton>\r\n      ),\r\n    },\r\n  ];\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 w-full h-screen place-items-center bg-gray-500 bg-opacity-60 backdrop-blur-[1px] ${show}`}\r\n    >\r\n      <div className=\"bg-white p-10 w-96 rounded-md shadow-md relative\">\r\n        <div className=\"absolute top-3 right-3 text-2xl text-gray-500 hover:text-gray-600 transition-all\">\r\n          <Button\r\n            type={\"button\"}\r\n            text={<VscClose />}\r\n            fn={() => {\r\n              hide(\"hidden\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h3 className=\"font-semibold\">Share</h3>\r\n        <div className=\"flex items-center gap-3 justify-between mt-4 mb-8\">\r\n          <div>\r\n            <input\r\n              type=\"url\"\r\n              name=\"page_url\"\r\n              id=\"page_url\"\r\n              disabled\r\n              value={window.location.href}\r\n              className=\"border-2 border-gray-300 border-dashed px-2 py-1 rounded-md w-60 truncate\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <ul className=\"flex items-center gap-3 text-xl text-gray-500 hover:text-gray-600 transition-all\">\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"copy page link\"\r\n                  disabled={copied}\r\n                  onClick={() => {\r\n                    setCopied((prev) => !prev);\r\n                    navigator.clipboard.writeText(window.location.href);\r\n                    setTimeout(() => {\r\n                      setCopied((prev) => !prev);\r\n                    }, 1000);\r\n                  }}\r\n                  className=\"active:bg-blue-200\"\r\n                >\r\n                  {copied ? <MdDone /> : <VscCopy />}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                {/* <button> */}\r\n                {flashcards.map((card) => {\r\n                  if (card.id === Number(id)) {\r\n                    return (\r\n                      <ShareOnSocial\r\n                        key={card.id}\r\n                        textToShare={card.groups.groupDesc}\r\n                        link={window.location.href}\r\n                        linkTitle={card.groups.group}\r\n                        linkMetaDesc={card.groups.groupDesc}\r\n                        linkFavicon={\"dummy\"}\r\n                        noReferer\r\n                      >\r\n                        <button type=\"button\" title=\"share page link\">\r\n                          <BiShareAlt />\r\n                        </button>\r\n                      </ShareOnSocial>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <ul className=\"flex items-center gap-4 justify-between flex-wrap\">\r\n          {socialShare.map(({ id, btn }) => (\r\n            <li key={id}>{btn}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","import React from \"react\";\r\n\r\nconst Slider = ({ term, defination, image, termRef }) => {\r\n  //   const { flashcards } = useSelector((state) => state.flashCardData);\r\n  return (\r\n    <div ref={termRef} className=\"space-y-10 w-full mt-4 xl:mt-0\">\r\n      <div className=\"bg-white p-5 space-y-4 sm:space-y-0 shadow-sm rounded-md sm:min-h-[300px]\">\r\n        {/* This code renders a `div` element if the `image` variable is not `null`. */}\r\n        {/* The `div` element contains the term image. */}\r\n        {image && (\r\n          <div>\r\n            <img\r\n              src={image}\r\n              alt={term}\r\n              loading=\"lazy\"\r\n              className=\"sm:w-96 sm:float-left sm:mr-4 sm:mb-2 aspect-video w-full object-cover rounded-md\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div>\r\n          <h2 className=\"font-semibold mb-2\">{term}</h2>\r\n          <p>{defination}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","// print template page\r\n\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PrintTemplate = ({ pdfRef }) => {\r\n  // Get the flashcards from the redux store\r\n  const { flashcards } = useSelector((state) => state.flashCardData);\r\n\r\n  // Get the ID from the URL params\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  // Check if the ID is in the flashcards array\r\n  const flashcard = flashcards.find((item) => item.id === Number(id));\r\n\r\n  // If the ID is in the flashcards array, render the template\r\n  if (flashcard) {\r\n    return (\r\n      <div className=\"hidden\">\r\n        <div\r\n          ref={pdfRef}\r\n          key={flashcard.id}\r\n          className=\"bg-white p-4 sm:p-8 max-w-4xl\"\r\n        >\r\n          <div className=\"space-y-10\">\r\n            <div className=\"flex items-center flex-col md:flex-row gap-5 sm:flex-row\">\r\n              <div>\r\n                <img\r\n                  src={flashcard.groups.Profile}\r\n                  alt=\"Group_image\"\r\n                  className=\"w-52 aspect-square rounded-md object-cover\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h2 className=\"font-semibold text-xl text-center sm:text-left\">\r\n                  {flashcard.groups.group}\r\n                </h2>\r\n                <p className=\"text-gray-600\">{flashcard.groups.groupDesc}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <ul className=\"space-y-6 flex flex-col\">\r\n                {flashcard.terms.map(({ term, defination, image }, index) => (\r\n                  <li key={index}>\r\n                    <div className=\"flex gap-3 mb-4\">\r\n                      <span className=\"w-7 h-7 rounded-full aspect-square bg-blue-500 text-white grid place-items-center\">\r\n                        1\r\n                      </span>\r\n                      <h3 className=\"font-semibold\">{term}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"text-center\">\r\n                      <div>\r\n                        <img\r\n                          src={image}\r\n                          alt=\"Group_image\"\r\n                          className=\"w-40 aspect-square object-cover rounded-md float-left mr-2 mb-2 mt-2\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"text-gray-600 text-justify\">\r\n                          {defination}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If the ID is not in the flashcards array, return null\r\n  return null;\r\n};\r\n\r\nexport default PrintTemplate;\r\n","// Flashcard detail page that shows flashcard data\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { BsArrowLeft, BsDownload, BsPrinter } from \"react-icons/bs\";\r\nimport { CiShare2 } from \"react-icons/ci\";\r\nimport Button from \"../components/ui/button/Button\";\r\nimport { GrNext, GrPrevious } from \"react-icons/gr\";\r\nimport ShareModal from \"../components/ui/modal/ShareModal\";\r\nimport Slider from \"../components/ui/slider/Slider\";\r\nimport PrintTemplate from \"../components/template/PrintTemplate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst FlashcardDetails = () => {\r\n  const params = useParams();\r\n  const { id } = params;\r\n  console.log(typeof id);\r\n  const [toggleModal, setToggleModal] = useState(\"hidden\");\r\n  const { flashcards } = useSelector((state) => state.flashCardData);\r\n\r\n  // download as pdf\r\n  const pdfRef = useRef();\r\n  const downloadPDF = useReactToPrint({\r\n    content: () => pdfRef.current,\r\n  });\r\n\r\n  // download single term\r\n  const termRef = useRef();\r\n\r\n  // share, download and print button data\r\n  const SideBtnData = [\r\n    {\r\n      btn_id: 1,\r\n      btn_title: \"share the webpage\",\r\n      btn_icon: <CiShare2 className=\"text-blue-600\" />,\r\n      btn_text: \"Share\",\r\n      btn_fn: () => {\r\n        setToggleModal(\"grid\");\r\n      },\r\n    },\r\n    {\r\n      btn_id: 2,\r\n      btn_title: \"download as PDF\",\r\n      btn_icon: <BsDownload className=\"text-blue-600\" />,\r\n      btn_text: \"Download\",\r\n      btn_fn: downloadPDF,\r\n    },\r\n    {\r\n      btn_id: 3,\r\n      btn_title: \"print\",\r\n      btn_icon: <BsPrinter className=\"text-blue-600\" />,\r\n      btn_text: \"Print\",\r\n      btn_fn: useReactToPrint({\r\n        content: () => termRef.current,\r\n      }),\r\n    },\r\n  ];\r\n\r\n  const [state, setState] = useState({\r\n    term: \"\",\r\n    defination: \"\",\r\n    image: \"\",\r\n    index: 0,\r\n    totalTerms: 0,\r\n  });\r\n\r\n  const [active, setActive] = useState(null);\r\n\r\n  const fetchTermData = (term, defination, image, index, totalTerms) =>\r\n    setState({ term, defination, image, index, totalTerms });\r\n\r\n  const buttonRef = useRef();\r\n\r\n  useEffect(() => {\r\n    buttonRef.current.click();\r\n  }, []);\r\n\r\n  const displayData = (newInd) => {\r\n    flashcards.map((item) => {\r\n      return item.terms.map(({ term, defination, image }, index, arr) => {\r\n        if (Number(newInd) === index) {\r\n          setActive(newInd);\r\n          const totalTerms = arr.length;\r\n          fetchTermData(term, defination, image, index, totalTerms);\r\n        }\r\n        return null;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* share modal  */}\r\n\r\n      <ShareModal show={toggleModal} hide={setToggleModal} />\r\n      <PrintTemplate pdfRef={pdfRef} />\r\n\r\n      {/* title and description */}\r\n      <div className=\"flex items-start gap-5 mb-10\">\r\n        <div>\r\n          <Link to=\"/dashboard\">\r\n            <i className=\"text-xl text-red-600\">\r\n              <BsArrowLeft />\r\n            </i>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {flashcards.map((card) => {\r\n            if (card.id === Number(id)) {\r\n              return (\r\n                <div key={card.id}>\r\n                  <h3 className=\"text-2xl font-semibold leading-none capitalize mb-2\">\r\n                    {card.groups.group}\r\n                  </h3>\r\n                  <p>{card.groups.groupDesc}</p>\r\n                </div>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* card details container */}\r\n\r\n      <div className=\"xl:flex xl:gap-3 xl:items-start\">\r\n        {/* card list */}\r\n        <div className=\"bg-white p-4 rounded-md max-h-96\">\r\n          <h5 className=\"text-gray-500 border-b-2 border-b-gray-100 font-semibold\">\r\n            Flashcards\r\n          </h5>\r\n          <ul className=\"flex gap-3 mt-4 font-medium text-gray-600 xl:overflow-y-scroll max-h-80 pb-5 overflow-x-scroll xl:flex-col xl:w-52 xl:overflow-x-auto\">\r\n            {flashcards.map((item) => {\r\n              if (item.id === Number(id)) {\r\n                return item.terms.map(\r\n                  ({ term, defination, image }, index, arr) => (\r\n                    <li key={index} className=\"border-b border-gray-100 \">\r\n                      <button\r\n                        type=\"button\"\r\n                        ref={index === 0 ? buttonRef : null}\r\n                        onClick={() => {\r\n                          setActive(index);\r\n\r\n                          const totalTerms = arr.length;\r\n                          fetchTermData(\r\n                            term,\r\n                            defination,\r\n                            image,\r\n                            index,\r\n                            totalTerms\r\n                          );\r\n                        }}\r\n                        className={`text-left w-52 bg-gray-200 p-3 rounded-md shadow-sm truncate xl:w-full xl:bg-transparent xl:p-0 xl:pb-1 transition-all xl:hover:text-blue-500 ${\r\n                          active === index && \"xl:text-blue-500\"\r\n                        }`}\r\n                      >\r\n                        {term}\r\n                      </button>\r\n                    </li>\r\n                  )\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/* slider or middle container that show flashcard defination */}\r\n        <div className=\"space-y-10 w-full mb-10\" id=\"myId\">\r\n          <Slider\r\n            key={id}\r\n            defination={state.defination}\r\n            image={state.image}\r\n            term={state.term}\r\n            termRef={termRef}\r\n          />\r\n\r\n          {/*button's to change the term defination */}\r\n          <div className=\"flex items-center gap-8 justify-center\">\r\n            <Button\r\n              type={\"button\"}\r\n              text={<GrPrevious />}\r\n              fn={() => displayData(active - 1)}\r\n              btnclass={\"p-2 rounded-md active:bg-blue-100 hover:bg-gray-200\"}\r\n            />\r\n            <span>\r\n              {state.index + 1}/{state.totalTerms}\r\n            </span>\r\n            <Button\r\n              type={\"button\"}\r\n              text={<GrNext />}\r\n              fn={() => displayData(active + 1)}\r\n              btnclass={\"p-2 rounded-md active:bg-blue-100 hover:bg-gray-200\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* download, print and share buttons */}\r\n        <div>\r\n          <ul className=\"flex gap-3 overflow-x-scroll xl:flex-col xl:overflow-x-auto\">\r\n            {SideBtnData.map(\r\n              ({ btn_icon, btn_text, btn_title, btn_id, btn_fn }) => (\r\n                <li key={btn_id}>\r\n                  <Button\r\n                    fn={btn_fn}\r\n                    type={\"button\"}\r\n                    title={`Click here to ${btn_title}`}\r\n                    text={\r\n                      <>\r\n                        {btn_icon}\r\n                        {btn_text}\r\n                      </>\r\n                    }\r\n                    btnclass=\"flex items-center gap-2 bg-white rounded-md w-full shadow-sm transition-all px-6 py-2\"\r\n                  />\r\n                </li>\r\n              )\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashcardDetails;\r\n"],"names":["_ref","text","btnclass","fn","type","disabled","title","ref","_jsx","onClick","className","children","show","hide","flashcards","useSelector","state","flashCardData","id","useParams","socialShare","btn","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","round","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","_useState","useState","_useState2","_slicedToArray","copied","setCopied","concat","_jsxs","Button","VscClose","name","value","window","location","href","prev","navigator","clipboard","writeText","setTimeout","MdDone","VscCopy","map","card","Number","ShareOnSocial","textToShare","groups","groupDesc","link","linkTitle","group","linkMetaDesc","linkFavicon","noReferer","BiShareAlt","_ref2","term","defination","image","termRef","src","alt","loading","pdfRef","flashcard","find","item","Profile","terms","index","console","log","toggleModal","setToggleModal","_useSelector","useRef","downloadPDF","useReactToPrint","content","current","SideBtnData","btn_id","btn_title","btn_icon","CiShare2","btn_text","btn_fn","BsDownload","BsPrinter","_useState3","totalTerms","_useState4","setState","_useState5","_useState6","active","setActive","fetchTermData","buttonRef","useEffect","click","displayData","newInd","arr","length","ShareModal","PrintTemplate","Link","to","BsArrowLeft","Slider","GrPrevious","GrNext","_ref3","_Fragment"],"sourceRoot":""}